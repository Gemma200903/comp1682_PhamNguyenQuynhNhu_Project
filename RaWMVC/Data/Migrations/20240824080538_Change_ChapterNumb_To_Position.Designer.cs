// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaWMVC.Data;

#nullable disable

namespace RaWMVC.Data.Migrations
{
    [DbContext(typeof(RaWDbContext))]
    [Migration("20240824080538_Change_ChapterNumb_To_Position")]
    partial class Change_ChapterNumb_To_Position
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RaWMVC.Data.Entities.Chapter", b =>
                {
                    b.Property<Guid>("chapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("chapterContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("chapterTitle")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<DateTime>("publishDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("storyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("chapterId");

                    b.HasIndex("storyId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Genre", b =>
                {
                    b.Property<Guid>("genreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("genreDescription")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("genreName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("genreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            genreId = new Guid("06691ea9-d2cf-473b-a592-dbab69fe3ffe"),
                            Position = 0,
                            genreDescription = "Fast-paced plot with intense events.",
                            genreName = "Action"
                        },
                        new
                        {
                            genreId = new Guid("32a29cb8-b605-456d-82f2-76fb5564deee"),
                            Position = 0,
                            genreDescription = "Exciting journey or quest.",
                            genreName = "Adventure"
                        });
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Medium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Status", b =>
                {
                    b.Property<Guid>("statusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("statusDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("statusName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("statusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            statusId = new Guid("2f85b983-e349-4a46-b829-a77cd30be50f"),
                            Position = 0,
                            statusDescription = "Fast-paced plot with intense events.",
                            statusName = "Ongoing"
                        },
                        new
                        {
                            statusId = new Guid("bf3a1f0a-cb15-43f4-a270-30bf97762513"),
                            Position = 0,
                            statusDescription = "Exciting journey or quest.",
                            statusName = "Completed"
                        });
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Story", b =>
                {
                    b.Property<Guid>("storyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MediumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("coverImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("genreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("publishDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("statusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("storyDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("storyTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("tagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("storyId");

                    b.HasIndex("MediumId");

                    b.HasIndex("genreId");

                    b.HasIndex("statusId");

                    b.HasIndex("tagId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Tag", b =>
                {
                    b.Property<Guid>("tagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("tagDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("tagName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.HasKey("tagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            tagId = new Guid("2ce6c267-d3fc-4820-8f04-6547696bab28"),
                            Position = 0,
                            tagDescription = "Romance between male characters.",
                            tagName = "Boylove"
                        },
                        new
                        {
                            tagId = new Guid("e7196f16-0bf0-478f-8892-2ef83d09d14c"),
                            Position = 0,
                            tagDescription = "Romance between female characters.",
                            tagName = "Girllove"
                        },
                        new
                        {
                            tagId = new Guid("acecd581-de79-498d-b4d6-c078a688e407"),
                            Position = 0,
                            tagDescription = "Character with albinism.",
                            tagName = "Albino"
                        },
                        new
                        {
                            tagId = new Guid("48fa837c-6f38-4bf3-a52e-150d326f65d7"),
                            Position = 0,
                            tagDescription = "Character with pale skin tone.",
                            tagName = "Pale"
                        },
                        new
                        {
                            tagId = new Guid("01e61df7-c444-4555-a4ad-6b6cd8cb182f"),
                            Position = 0,
                            tagDescription = "Character with dark brown skin.",
                            tagName = "Dark brown skin tone"
                        });
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Chapter", b =>
                {
                    b.HasOne("RaWMVC.Data.Entities.Story", "Story")
                        .WithMany("Chapters")
                        .HasForeignKey("storyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Story");
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Story", b =>
                {
                    b.HasOne("RaWMVC.Data.Entities.Medium", "Medium")
                        .WithMany("Stories")
                        .HasForeignKey("MediumId");

                    b.HasOne("RaWMVC.Data.Entities.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("genreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaWMVC.Data.Entities.Status", "Status")
                        .WithMany()
                        .HasForeignKey("statusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaWMVC.Data.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("tagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Medium");

                    b.Navigation("Status");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Medium", b =>
                {
                    b.Navigation("Stories");
                });

            modelBuilder.Entity("RaWMVC.Data.Entities.Story", b =>
                {
                    b.Navigation("Chapters");
                });
#pragma warning restore 612, 618
        }
    }
}
