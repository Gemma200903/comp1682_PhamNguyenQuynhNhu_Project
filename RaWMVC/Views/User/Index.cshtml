@model RaWMVC.ViewModels.AccountViewModel
@using Microsoft.AspNetCore.Identity
@using RaWMVC.Areas.Identity.Data

@{
    ViewData["Title"] = "Account Management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var roles = ViewBag.Roles as List<RaWMVCRole>;

    var isCreate = Model == null || Model.Id == String.Empty;
    var actionString = isCreate ? "Create" : "Edit";
    var buttonString = isCreate ? "Create" : "Edit";
}

<h3 class="text-center fw-bold">Account Management</h3>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="@actionString">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="card">
                <div class="card-body">
                    <label class="control-label">Username</label>
                    <fieldset class="form-group">
                        <input asp-for="Username" class="form-control" required/>
                    </fieldset>
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <label class="control-label">Password</label>
                    <fieldset class="form-group">
                        <input asp-for="Password" class="form-control" />
                    </fieldset>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <label class="control-label">Select Role</label>
                    <select asp-for="RoleId" asp-items="ViewBag.Roles" class="form-control" required>
                    </select>
                    <span asp-validation-for="RoleId" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group" style="text-align: center;">
                <input type="submit" value="@buttonString" class="btn btn-primary" />
            </div>
        </form>

    </div>
    <div class="col-md-6">
        <div id="account-list">
            @await Component.InvokeAsync("AccountList")
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deleteAccount(id) {
            $.ajax({
                type: 'POST',
                url: "/User/Delete",
                data: {
                    id
                },
                success: function (data) {
                    toastr.success(data.message);
                    ReloadAccountList();
                },
                error: function (err) {
                    toastr.error(data.message || "Failed to delete account.");
                },
                complete: function (e) {

                },
            });
        }
        function ReloadAccountList() {
            $.ajax({
                type: 'GET',
                url: "/User/ReloadAccountList",
                data: {},
                success: function (data) {
                    let divAccountList = document.getElementById("account-list");
                    if (divAccountList) {
                        divAccountList.innerHTML = data;
                    }
                },
                error: function (err) {

                },
                complete: function (e) {

                },
            });
        }
    </script>
}
