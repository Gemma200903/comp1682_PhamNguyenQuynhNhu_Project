@model List<RaWMVC.Data.Entities.Story>

@{
    ViewData["Title"] = "My Story";
    // Layout = "~/View/Shared/_Layout.cshtml";
}

<main class="main_content">
    <div class="top_page d-flex justify-content-between">
        <h3 class="fw-bold">My Stories</h3>
        <div class="text-success text-uppercase fs-3">@TempData["MessageSuccess"] </div>
        <!-- Button trigger modal -->
        <button type="button"
                class="btn_create_story text-white"
                data-bs-toggle="modal"
                data-bs-target="#exampleModal"
                onclick="modalShowCreateStory()">
            Create a new story <i class="fa-solid fa-circle-plus ms-2"></i>
        </button>
    </div>
    <div class="main_content_dashboard mt-3 p-2" id="story-list">
        @await Component.InvokeAsync("StoryList")
    </div>
</main>
@section Scripts {
    <script>
        //=== Create Story ===//
        function modalShowCreateStory(pointer) {
            $.ajax({
                type: "GET",
                url: "/Story/Create",
                success: function (data) {
                    openModal(data, modalSize.large)
                },
                error: function (err) {

                },
                complete: function () { }
            });
        }
        function createStory() {
            let formData = new FormData();

            formData.append("StoryTitle", document.getElementById("titleStory").value);
            formData.append("StoryDescription", document.getElementById("descriptionStory").value);
            formData.append("GenreId", document.getElementById("categorySelect").value);
            formData.append("TagId", document.getElementById("tagSelect").value);
            formData.append("StatusId", document.getElementById("statusSelect").value);
            formData.append("CoverImage", document.getElementById("file").files[0]);

            $.ajax({
                type: "POST",
                url: "/Story/Create",
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    toastr.success(data.message);
                    closeModal();
                    ReloadStoryList();
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function previewImage(event) {
            const file = event.target.files[0];  // Get the selected file
            const reader = new FileReader();     // Create a new FileReader instance

            reader.onload = function (e) {
                // Set the image preview source to the result of the FileReader
                const imagePreview = document.getElementById("imagePreview");
                imagePreview.style.display = "block";  // Show the image
                imagePreview.src = e.target.result;  // Set the image source
            };

            if (file) {
                reader.readAsDataURL(file);  // Read the file as a Data URL
            }
        }
        //=== Delete Story ===//
        function deleteStory(idStory) {
            $.ajax({
                type: 'POST',
                url: "/Story/Delete",
                data: {
                    idStory
                },
                success: function (data) {
                    toastr.success(data.message);
                    ReloadStoryList();
                },
                error: function (err) {

                },
                complete: function (e) {

                },
            });
        }
        function ReloadStoryList() {
            $.ajax({
                type: 'GET',
                url: "/Story/ReloadStoryList/",
                success: function (data) {
                    let divStoryList = document.getElementById("story-list");

                    if (divStoryList) {
                        divStoryList.innerHTML = data;
                    }
                },
                error: function (err) {

                },
                complete: function (e) {

                },
            });
        }
        //=== Open modal Edit ===//
        function modalShowEditStory(idStory) {
            console.log(idStory);

            $.ajax({
                type: "GET",
                url: "/Story/Edit",
                data: {
                    idStory,
                },
                success: function (data) {
                    openModal(data);
                },
                error: function (err) {

                },
                complete: function () { }
            });
        }
        function previewImageEdit(event) {
            const file = event.target.files[0];  // Get the selected file
            const reader = new FileReader();     // Create a new FileReader instance

            reader.onload = function (e) {
                // Set the image preview source to the result of the FileReader
                const imageEditPreview = document.getElementById("imageEditPreview");
                imageEditPreview.style.display = "block";  // Show the image
                imageEditPreview.src = e.target.result;  // Set the image source
            };

            if (file) {
                reader.readAsDataURL(file);  // Read the file as a Data URL
            }
        }
        function editStory(idStory) {
            let formData = new FormData(document.getElementById("editStoryForm"));

            $.ajax({
                type: "POST",
                url: "/Story/Edit",
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    toastr.success(data.message);
                    closeModal();
                    ReloadStoryList();
                },
                error: function (err) {
                    console.error(err);
                }
            });
        }
    </script>
}